// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: private_join_and_compute/private_intersection_sum.proto

#include "private_join_and_compute/private_intersection_sum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_private_5fjoin_5fand_5fcompute_2fmatch_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EncryptedSet_private_5fjoin_5fand_5fcompute_2fmatch_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto;
namespace private_join_and_compute {
class PrivateIntersectionSumClientMessage_StartProtocolRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateIntersectionSumClientMessage_StartProtocolRequest> _instance;
} _PrivateIntersectionSumClientMessage_StartProtocolRequest_default_instance_;
class PrivateIntersectionSumClientMessage_ClientRoundOneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateIntersectionSumClientMessage_ClientRoundOne> _instance;
} _PrivateIntersectionSumClientMessage_ClientRoundOne_default_instance_;
class PrivateIntersectionSumClientMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateIntersectionSumClientMessage> _instance;
  const ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest* start_protocol_request_;
  const ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne* client_round_one_;
} _PrivateIntersectionSumClientMessage_default_instance_;
class PrivateIntersectionSumServerMessage_ServerRoundOneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateIntersectionSumServerMessage_ServerRoundOne> _instance;
} _PrivateIntersectionSumServerMessage_ServerRoundOne_default_instance_;
class PrivateIntersectionSumServerMessage_ServerRoundTwoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateIntersectionSumServerMessage_ServerRoundTwo> _instance;
} _PrivateIntersectionSumServerMessage_ServerRoundTwo_default_instance_;
class PrivateIntersectionSumServerMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateIntersectionSumServerMessage> _instance;
  const ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne* server_round_one_;
  const ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo* server_round_two_;
} _PrivateIntersectionSumServerMessage_default_instance_;
}  // namespace private_join_and_compute
static void InitDefaultsscc_info_PrivateIntersectionSumClientMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_join_and_compute::_PrivateIntersectionSumClientMessage_default_instance_;
    new (ptr) ::private_join_and_compute::PrivateIntersectionSumClientMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_join_and_compute::PrivateIntersectionSumClientMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrivateIntersectionSumClientMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PrivateIntersectionSumClientMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto}, {
      &scc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
      &scc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,}};

static void InitDefaultsscc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_join_and_compute::_PrivateIntersectionSumClientMessage_ClientRoundOne_default_instance_;
    new (ptr) ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto}, {
      &scc_info_EncryptedSet_private_5fjoin_5fand_5fcompute_2fmatch_2eproto.base,}};

static void InitDefaultsscc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_join_and_compute::_PrivateIntersectionSumClientMessage_StartProtocolRequest_default_instance_;
    new (ptr) ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto}, {}};

static void InitDefaultsscc_info_PrivateIntersectionSumServerMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_join_and_compute::_PrivateIntersectionSumServerMessage_default_instance_;
    new (ptr) ::private_join_and_compute::PrivateIntersectionSumServerMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_join_and_compute::PrivateIntersectionSumServerMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PrivateIntersectionSumServerMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PrivateIntersectionSumServerMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto}, {
      &scc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
      &scc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,}};

static void InitDefaultsscc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_join_and_compute::_PrivateIntersectionSumServerMessage_ServerRoundOne_default_instance_;
    new (ptr) ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto}, {
      &scc_info_EncryptedSet_private_5fjoin_5fand_5fcompute_2fmatch_2eproto.base,}};

static void InitDefaultsscc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::private_join_and_compute::_PrivateIntersectionSumServerMessage_ServerRoundTwo_default_instance_;
    new (ptr) ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne, public_key_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne, encrypted_set_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne, reencrypted_set_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::private_join_and_compute::PrivateIntersectionSumClientMessageDefaultTypeInternal, start_protocol_request_),
  offsetof(::private_join_and_compute::PrivateIntersectionSumClientMessageDefaultTypeInternal, client_round_one_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumClientMessage, message_content_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne, encrypted_set_),
  0,
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo, intersection_size_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo, computation_proof_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo, encrypted_sum_),
  2,
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::private_join_and_compute::PrivateIntersectionSumServerMessageDefaultTypeInternal, server_round_one_),
  offsetof(::private_join_and_compute::PrivateIntersectionSumServerMessageDefaultTypeInternal, server_round_two_),
  PROTOBUF_FIELD_OFFSET(::private_join_and_compute::PrivateIntersectionSumServerMessage, message_content_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest)},
  { 5, 13, sizeof(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne)},
  { 16, -1, sizeof(::private_join_and_compute::PrivateIntersectionSumClientMessage)},
  { 24, 30, sizeof(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne)},
  { 31, 39, sizeof(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo)},
  { 42, -1, sizeof(::private_join_and_compute::PrivateIntersectionSumServerMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_join_and_compute::_PrivateIntersectionSumClientMessage_StartProtocolRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_join_and_compute::_PrivateIntersectionSumClientMessage_ClientRoundOne_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_join_and_compute::_PrivateIntersectionSumClientMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_join_and_compute::_PrivateIntersectionSumServerMessage_ServerRoundOne_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_join_and_compute::_PrivateIntersectionSumServerMessage_ServerRoundTwo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::private_join_and_compute::_PrivateIntersectionSumServerMessage_default_instance_),
};

const char descriptor_table_protodef_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n7private_join_and_compute/private_inter"
  "section_sum.proto\022\030private_join_and_comp"
  "ute\032$private_join_and_compute/match.prot"
  "o\"\327\003\n#PrivateIntersectionSumClientMessag"
  "e\022t\n\026start_protocol_request\030\001 \001(\0132R.priv"
  "ate_join_and_compute.PrivateIntersection"
  "SumClientMessage.StartProtocolRequestH\000\022"
  "h\n\020client_round_one\030\002 \001(\0132L.private_join"
  "_and_compute.PrivateIntersectionSumClien"
  "tMessage.ClientRoundOneH\000\032\026\n\024StartProtoc"
  "olRequest\032\244\001\n\016ClientRoundOne\022\022\n\npublic_k"
  "ey\030\001 \001(\014\022=\n\rencrypted_set\030\002 \001(\0132&.privat"
  "e_join_and_compute.EncryptedSet\022\?\n\017reenc"
  "rypted_set\030\003 \001(\0132&.private_join_and_comp"
  "ute.EncryptedSetB\021\n\017message_content\"\274\003\n#"
  "PrivateIntersectionSumServerMessage\022h\n\020s"
  "erver_round_one\030\001 \001(\0132L.private_join_and"
  "_compute.PrivateIntersectionSumServerMes"
  "sage.ServerRoundOneH\000\022h\n\020server_round_tw"
  "o\030\002 \001(\0132L.private_join_and_compute.Priva"
  "teIntersectionSumServerMessage.ServerRou"
  "ndTwoH\000\032O\n\016ServerRoundOne\022=\n\rencrypted_s"
  "et\030\001 \001(\0132&.private_join_and_compute.Encr"
  "yptedSet\032]\n\016ServerRoundTwo\022\031\n\021intersecti"
  "on_size\030\001 \001(\003\022\031\n\021computation_proof\030\002 \001(\t"
  "\022\025\n\rencrypted_sum\030\003 \001(\014B\021\n\017message_conte"
  "nt"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto_deps[1] = {
  &::descriptor_table_private_5fjoin_5fand_5fcompute_2fmatch_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto_sccs[6] = {
  &scc_info_PrivateIntersectionSumClientMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
  &scc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
  &scc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
  &scc_info_PrivateIntersectionSumServerMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
  &scc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
  &scc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto = {
  false, false, descriptor_table_protodef_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto, "private_join_and_compute/private_intersection_sum.proto", 1042,
  &descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto_once, descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto_sccs, descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto::offsets,
  file_level_metadata_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto, 6, file_level_enum_descriptors_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto, file_level_service_descriptors_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto)), true);
namespace private_join_and_compute {

// ===================================================================

void PrivateIntersectionSumClientMessage_StartProtocolRequest::InitAsDefaultInstance() {
}
class PrivateIntersectionSumClientMessage_StartProtocolRequest::_Internal {
 public:
};

PrivateIntersectionSumClientMessage_StartProtocolRequest::PrivateIntersectionSumClientMessage_StartProtocolRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
}
PrivateIntersectionSumClientMessage_StartProtocolRequest::PrivateIntersectionSumClientMessage_StartProtocolRequest(const PrivateIntersectionSumClientMessage_StartProtocolRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::SharedCtor() {
}

PrivateIntersectionSumClientMessage_StartProtocolRequest::~PrivateIntersectionSumClientMessage_StartProtocolRequest() {
  // @@protoc_insertion_point(destructor:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::ArenaDtor(void* object) {
  PrivateIntersectionSumClientMessage_StartProtocolRequest* _this = reinterpret_cast< PrivateIntersectionSumClientMessage_StartProtocolRequest* >(object);
  (void)_this;
}
void PrivateIntersectionSumClientMessage_StartProtocolRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateIntersectionSumClientMessage_StartProtocolRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateIntersectionSumClientMessage_StartProtocolRequest& PrivateIntersectionSumClientMessage_StartProtocolRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateIntersectionSumClientMessage_StartProtocolRequest_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  return *internal_default_instance();
}


void PrivateIntersectionSumClientMessage_StartProtocolRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateIntersectionSumClientMessage_StartProtocolRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateIntersectionSumClientMessage_StartProtocolRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  return target;
}

size_t PrivateIntersectionSumClientMessage_StartProtocolRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateIntersectionSumClientMessage_StartProtocolRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateIntersectionSumClientMessage_StartProtocolRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
    MergeFrom(*source);
  }
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::MergeFrom(const PrivateIntersectionSumClientMessage_StartProtocolRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::CopyFrom(const PrivateIntersectionSumClientMessage_StartProtocolRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateIntersectionSumClientMessage_StartProtocolRequest::IsInitialized() const {
  return true;
}

void PrivateIntersectionSumClientMessage_StartProtocolRequest::InternalSwap(PrivateIntersectionSumClientMessage_StartProtocolRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateIntersectionSumClientMessage_StartProtocolRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrivateIntersectionSumClientMessage_ClientRoundOne::InitAsDefaultInstance() {
  ::private_join_and_compute::_PrivateIntersectionSumClientMessage_ClientRoundOne_default_instance_._instance.get_mutable()->encrypted_set_ = const_cast< ::private_join_and_compute::EncryptedSet*>(
      ::private_join_and_compute::EncryptedSet::internal_default_instance());
  ::private_join_and_compute::_PrivateIntersectionSumClientMessage_ClientRoundOne_default_instance_._instance.get_mutable()->reencrypted_set_ = const_cast< ::private_join_and_compute::EncryptedSet*>(
      ::private_join_and_compute::EncryptedSet::internal_default_instance());
}
class PrivateIntersectionSumClientMessage_ClientRoundOne::_Internal {
 public:
  using HasBits = decltype(std::declval<PrivateIntersectionSumClientMessage_ClientRoundOne>()._has_bits_);
  static void set_has_public_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::private_join_and_compute::EncryptedSet& encrypted_set(const PrivateIntersectionSumClientMessage_ClientRoundOne* msg);
  static void set_has_encrypted_set(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::private_join_and_compute::EncryptedSet& reencrypted_set(const PrivateIntersectionSumClientMessage_ClientRoundOne* msg);
  static void set_has_reencrypted_set(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::private_join_and_compute::EncryptedSet&
PrivateIntersectionSumClientMessage_ClientRoundOne::_Internal::encrypted_set(const PrivateIntersectionSumClientMessage_ClientRoundOne* msg) {
  return *msg->encrypted_set_;
}
const ::private_join_and_compute::EncryptedSet&
PrivateIntersectionSumClientMessage_ClientRoundOne::_Internal::reencrypted_set(const PrivateIntersectionSumClientMessage_ClientRoundOne* msg) {
  return *msg->reencrypted_set_;
}
void PrivateIntersectionSumClientMessage_ClientRoundOne::clear_encrypted_set() {
  if (encrypted_set_ != nullptr) encrypted_set_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void PrivateIntersectionSumClientMessage_ClientRoundOne::clear_reencrypted_set() {
  if (reencrypted_set_ != nullptr) reencrypted_set_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
PrivateIntersectionSumClientMessage_ClientRoundOne::PrivateIntersectionSumClientMessage_ClientRoundOne(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
}
PrivateIntersectionSumClientMessage_ClientRoundOne::PrivateIntersectionSumClientMessage_ClientRoundOne(const PrivateIntersectionSumClientMessage_ClientRoundOne& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_public_key()) {
    public_key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_public_key(),
      GetArena());
  }
  if (from._internal_has_encrypted_set()) {
    encrypted_set_ = new ::private_join_and_compute::EncryptedSet(*from.encrypted_set_);
  } else {
    encrypted_set_ = nullptr;
  }
  if (from._internal_has_reencrypted_set()) {
    reencrypted_set_ = new ::private_join_and_compute::EncryptedSet(*from.reencrypted_set_);
  } else {
    reencrypted_set_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  public_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&encrypted_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reencrypted_set_) -
      reinterpret_cast<char*>(&encrypted_set_)) + sizeof(reencrypted_set_));
}

PrivateIntersectionSumClientMessage_ClientRoundOne::~PrivateIntersectionSumClientMessage_ClientRoundOne() {
  // @@protoc_insertion_point(destructor:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  public_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete encrypted_set_;
  if (this != internal_default_instance()) delete reencrypted_set_;
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::ArenaDtor(void* object) {
  PrivateIntersectionSumClientMessage_ClientRoundOne* _this = reinterpret_cast< PrivateIntersectionSumClientMessage_ClientRoundOne* >(object);
  (void)_this;
}
void PrivateIntersectionSumClientMessage_ClientRoundOne::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateIntersectionSumClientMessage_ClientRoundOne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateIntersectionSumClientMessage_ClientRoundOne& PrivateIntersectionSumClientMessage_ClientRoundOne::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateIntersectionSumClientMessage_ClientRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  return *internal_default_instance();
}


void PrivateIntersectionSumClientMessage_ClientRoundOne::Clear() {
// @@protoc_insertion_point(message_clear_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      public_key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(encrypted_set_ != nullptr);
      encrypted_set_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(reencrypted_set_ != nullptr);
      reencrypted_set_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateIntersectionSumClientMessage_ClientRoundOne::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes public_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_public_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .private_join_and_compute.EncryptedSet encrypted_set = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_encrypted_set(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .private_join_and_compute.EncryptedSet reencrypted_set = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reencrypted_set(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateIntersectionSumClientMessage_ClientRoundOne::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes public_key = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_public_key(), target);
  }

  // optional .private_join_and_compute.EncryptedSet encrypted_set = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::encrypted_set(this), target, stream);
  }

  // optional .private_join_and_compute.EncryptedSet reencrypted_set = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reencrypted_set(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  return target;
}

size_t PrivateIntersectionSumClientMessage_ClientRoundOne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bytes public_key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_public_key());
    }

    // optional .private_join_and_compute.EncryptedSet encrypted_set = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *encrypted_set_);
    }

    // optional .private_join_and_compute.EncryptedSet reencrypted_set = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *reencrypted_set_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateIntersectionSumClientMessage_ClientRoundOne* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateIntersectionSumClientMessage_ClientRoundOne>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
    MergeFrom(*source);
  }
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::MergeFrom(const PrivateIntersectionSumClientMessage_ClientRoundOne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_public_key(from._internal_public_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_encrypted_set()->::private_join_and_compute::EncryptedSet::MergeFrom(from._internal_encrypted_set());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_reencrypted_set()->::private_join_and_compute::EncryptedSet::MergeFrom(from._internal_reencrypted_set());
    }
  }
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::CopyFrom(const PrivateIntersectionSumClientMessage_ClientRoundOne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateIntersectionSumClientMessage_ClientRoundOne::IsInitialized() const {
  return true;
}

void PrivateIntersectionSumClientMessage_ClientRoundOne::InternalSwap(PrivateIntersectionSumClientMessage_ClientRoundOne* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  public_key_.Swap(&other->public_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrivateIntersectionSumClientMessage_ClientRoundOne, reencrypted_set_)
      + sizeof(PrivateIntersectionSumClientMessage_ClientRoundOne::reencrypted_set_)
      - PROTOBUF_FIELD_OFFSET(PrivateIntersectionSumClientMessage_ClientRoundOne, encrypted_set_)>(
          reinterpret_cast<char*>(&encrypted_set_),
          reinterpret_cast<char*>(&other->encrypted_set_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateIntersectionSumClientMessage_ClientRoundOne::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrivateIntersectionSumClientMessage::InitAsDefaultInstance() {
  ::private_join_and_compute::_PrivateIntersectionSumClientMessage_default_instance_.start_protocol_request_ = const_cast< ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest*>(
      ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest::internal_default_instance());
  ::private_join_and_compute::_PrivateIntersectionSumClientMessage_default_instance_.client_round_one_ = const_cast< ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne*>(
      ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne::internal_default_instance());
}
class PrivateIntersectionSumClientMessage::_Internal {
 public:
  static const ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest& start_protocol_request(const PrivateIntersectionSumClientMessage* msg);
  static const ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne& client_round_one(const PrivateIntersectionSumClientMessage* msg);
};

const ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest&
PrivateIntersectionSumClientMessage::_Internal::start_protocol_request(const PrivateIntersectionSumClientMessage* msg) {
  return *msg->message_content_.start_protocol_request_;
}
const ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne&
PrivateIntersectionSumClientMessage::_Internal::client_round_one(const PrivateIntersectionSumClientMessage* msg) {
  return *msg->message_content_.client_round_one_;
}
void PrivateIntersectionSumClientMessage::set_allocated_start_protocol_request(::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest* start_protocol_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_content();
  if (start_protocol_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(start_protocol_request);
    if (message_arena != submessage_arena) {
      start_protocol_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_protocol_request, submessage_arena);
    }
    set_has_start_protocol_request();
    message_content_.start_protocol_request_ = start_protocol_request;
  }
  // @@protoc_insertion_point(field_set_allocated:private_join_and_compute.PrivateIntersectionSumClientMessage.start_protocol_request)
}
void PrivateIntersectionSumClientMessage::set_allocated_client_round_one(::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne* client_round_one) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_content();
  if (client_round_one) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(client_round_one);
    if (message_arena != submessage_arena) {
      client_round_one = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_round_one, submessage_arena);
    }
    set_has_client_round_one();
    message_content_.client_round_one_ = client_round_one;
  }
  // @@protoc_insertion_point(field_set_allocated:private_join_and_compute.PrivateIntersectionSumClientMessage.client_round_one)
}
PrivateIntersectionSumClientMessage::PrivateIntersectionSumClientMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_join_and_compute.PrivateIntersectionSumClientMessage)
}
PrivateIntersectionSumClientMessage::PrivateIntersectionSumClientMessage(const PrivateIntersectionSumClientMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message_content();
  switch (from.message_content_case()) {
    case kStartProtocolRequest: {
      _internal_mutable_start_protocol_request()->::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest::MergeFrom(from._internal_start_protocol_request());
      break;
    }
    case kClientRoundOne: {
      _internal_mutable_client_round_one()->::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne::MergeFrom(from._internal_client_round_one());
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:private_join_and_compute.PrivateIntersectionSumClientMessage)
}

void PrivateIntersectionSumClientMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateIntersectionSumClientMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  clear_has_message_content();
}

PrivateIntersectionSumClientMessage::~PrivateIntersectionSumClientMessage() {
  // @@protoc_insertion_point(destructor:private_join_and_compute.PrivateIntersectionSumClientMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateIntersectionSumClientMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_message_content()) {
    clear_message_content();
  }
}

void PrivateIntersectionSumClientMessage::ArenaDtor(void* object) {
  PrivateIntersectionSumClientMessage* _this = reinterpret_cast< PrivateIntersectionSumClientMessage* >(object);
  (void)_this;
}
void PrivateIntersectionSumClientMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateIntersectionSumClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateIntersectionSumClientMessage& PrivateIntersectionSumClientMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateIntersectionSumClientMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  return *internal_default_instance();
}


void PrivateIntersectionSumClientMessage::clear_message_content() {
// @@protoc_insertion_point(one_of_clear_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  switch (message_content_case()) {
    case kStartProtocolRequest: {
      if (GetArena() == nullptr) {
        delete message_content_.start_protocol_request_;
      }
      break;
    }
    case kClientRoundOne: {
      if (GetArena() == nullptr) {
        delete message_content_.client_round_one_;
      }
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_CONTENT_NOT_SET;
}


void PrivateIntersectionSumClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message_content();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateIntersectionSumClientMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest start_protocol_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_protocol_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne client_round_one = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_round_one(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateIntersectionSumClientMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (message_content_case()) {
    case kStartProtocolRequest: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          1, _Internal::start_protocol_request(this), target, stream);
      break;
    }
    case kClientRoundOne: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          2, _Internal::client_round_one(this), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_join_and_compute.PrivateIntersectionSumClientMessage)
  return target;
}

size_t PrivateIntersectionSumClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_content_case()) {
    // .private_join_and_compute.PrivateIntersectionSumClientMessage.StartProtocolRequest start_protocol_request = 1;
    case kStartProtocolRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_content_.start_protocol_request_);
      break;
    }
    // .private_join_and_compute.PrivateIntersectionSumClientMessage.ClientRoundOne client_round_one = 2;
    case kClientRoundOne: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_content_.client_round_one_);
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateIntersectionSumClientMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateIntersectionSumClientMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateIntersectionSumClientMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_join_and_compute.PrivateIntersectionSumClientMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_join_and_compute.PrivateIntersectionSumClientMessage)
    MergeFrom(*source);
  }
}

void PrivateIntersectionSumClientMessage::MergeFrom(const PrivateIntersectionSumClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_content_case()) {
    case kStartProtocolRequest: {
      _internal_mutable_start_protocol_request()->::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest::MergeFrom(from._internal_start_protocol_request());
      break;
    }
    case kClientRoundOne: {
      _internal_mutable_client_round_one()->::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne::MergeFrom(from._internal_client_round_one());
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
}

void PrivateIntersectionSumClientMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateIntersectionSumClientMessage::CopyFrom(const PrivateIntersectionSumClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_join_and_compute.PrivateIntersectionSumClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateIntersectionSumClientMessage::IsInitialized() const {
  return true;
}

void PrivateIntersectionSumClientMessage::InternalSwap(PrivateIntersectionSumClientMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_content_, other->message_content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateIntersectionSumClientMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrivateIntersectionSumServerMessage_ServerRoundOne::InitAsDefaultInstance() {
  ::private_join_and_compute::_PrivateIntersectionSumServerMessage_ServerRoundOne_default_instance_._instance.get_mutable()->encrypted_set_ = const_cast< ::private_join_and_compute::EncryptedSet*>(
      ::private_join_and_compute::EncryptedSet::internal_default_instance());
}
class PrivateIntersectionSumServerMessage_ServerRoundOne::_Internal {
 public:
  using HasBits = decltype(std::declval<PrivateIntersectionSumServerMessage_ServerRoundOne>()._has_bits_);
  static const ::private_join_and_compute::EncryptedSet& encrypted_set(const PrivateIntersectionSumServerMessage_ServerRoundOne* msg);
  static void set_has_encrypted_set(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::private_join_and_compute::EncryptedSet&
PrivateIntersectionSumServerMessage_ServerRoundOne::_Internal::encrypted_set(const PrivateIntersectionSumServerMessage_ServerRoundOne* msg) {
  return *msg->encrypted_set_;
}
void PrivateIntersectionSumServerMessage_ServerRoundOne::clear_encrypted_set() {
  if (encrypted_set_ != nullptr) encrypted_set_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
PrivateIntersectionSumServerMessage_ServerRoundOne::PrivateIntersectionSumServerMessage_ServerRoundOne(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
}
PrivateIntersectionSumServerMessage_ServerRoundOne::PrivateIntersectionSumServerMessage_ServerRoundOne(const PrivateIntersectionSumServerMessage_ServerRoundOne& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_encrypted_set()) {
    encrypted_set_ = new ::private_join_and_compute::EncryptedSet(*from.encrypted_set_);
  } else {
    encrypted_set_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  encrypted_set_ = nullptr;
}

PrivateIntersectionSumServerMessage_ServerRoundOne::~PrivateIntersectionSumServerMessage_ServerRoundOne() {
  // @@protoc_insertion_point(destructor:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete encrypted_set_;
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::ArenaDtor(void* object) {
  PrivateIntersectionSumServerMessage_ServerRoundOne* _this = reinterpret_cast< PrivateIntersectionSumServerMessage_ServerRoundOne* >(object);
  (void)_this;
}
void PrivateIntersectionSumServerMessage_ServerRoundOne::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateIntersectionSumServerMessage_ServerRoundOne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateIntersectionSumServerMessage_ServerRoundOne& PrivateIntersectionSumServerMessage_ServerRoundOne::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateIntersectionSumServerMessage_ServerRoundOne_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  return *internal_default_instance();
}


void PrivateIntersectionSumServerMessage_ServerRoundOne::Clear() {
// @@protoc_insertion_point(message_clear_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(encrypted_set_ != nullptr);
    encrypted_set_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateIntersectionSumServerMessage_ServerRoundOne::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .private_join_and_compute.EncryptedSet encrypted_set = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_encrypted_set(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateIntersectionSumServerMessage_ServerRoundOne::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .private_join_and_compute.EncryptedSet encrypted_set = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::encrypted_set(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  return target;
}

size_t PrivateIntersectionSumServerMessage_ServerRoundOne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .private_join_and_compute.EncryptedSet encrypted_set = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *encrypted_set_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateIntersectionSumServerMessage_ServerRoundOne* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateIntersectionSumServerMessage_ServerRoundOne>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
    MergeFrom(*source);
  }
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::MergeFrom(const PrivateIntersectionSumServerMessage_ServerRoundOne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_encrypted_set()) {
    _internal_mutable_encrypted_set()->::private_join_and_compute::EncryptedSet::MergeFrom(from._internal_encrypted_set());
  }
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::CopyFrom(const PrivateIntersectionSumServerMessage_ServerRoundOne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateIntersectionSumServerMessage_ServerRoundOne::IsInitialized() const {
  return true;
}

void PrivateIntersectionSumServerMessage_ServerRoundOne::InternalSwap(PrivateIntersectionSumServerMessage_ServerRoundOne* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(encrypted_set_, other->encrypted_set_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateIntersectionSumServerMessage_ServerRoundOne::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrivateIntersectionSumServerMessage_ServerRoundTwo::InitAsDefaultInstance() {
}
class PrivateIntersectionSumServerMessage_ServerRoundTwo::_Internal {
 public:
  using HasBits = decltype(std::declval<PrivateIntersectionSumServerMessage_ServerRoundTwo>()._has_bits_);
  static void set_has_intersection_size(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_computation_proof(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_encrypted_sum(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PrivateIntersectionSumServerMessage_ServerRoundTwo::PrivateIntersectionSumServerMessage_ServerRoundTwo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
}
PrivateIntersectionSumServerMessage_ServerRoundTwo::PrivateIntersectionSumServerMessage_ServerRoundTwo(const PrivateIntersectionSumServerMessage_ServerRoundTwo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  computation_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_computation_proof()) {
    computation_proof_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_computation_proof(),
      GetArena());
  }
  encrypted_sum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_encrypted_sum()) {
    encrypted_sum_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_encrypted_sum(),
      GetArena());
  }
  intersection_size_ = from.intersection_size_;
  // @@protoc_insertion_point(copy_constructor:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  computation_proof_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  encrypted_sum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  intersection_size_ = PROTOBUF_LONGLONG(0);
}

PrivateIntersectionSumServerMessage_ServerRoundTwo::~PrivateIntersectionSumServerMessage_ServerRoundTwo() {
  // @@protoc_insertion_point(destructor:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  computation_proof_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  encrypted_sum_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::ArenaDtor(void* object) {
  PrivateIntersectionSumServerMessage_ServerRoundTwo* _this = reinterpret_cast< PrivateIntersectionSumServerMessage_ServerRoundTwo* >(object);
  (void)_this;
}
void PrivateIntersectionSumServerMessage_ServerRoundTwo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateIntersectionSumServerMessage_ServerRoundTwo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateIntersectionSumServerMessage_ServerRoundTwo& PrivateIntersectionSumServerMessage_ServerRoundTwo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateIntersectionSumServerMessage_ServerRoundTwo_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  return *internal_default_instance();
}


void PrivateIntersectionSumServerMessage_ServerRoundTwo::Clear() {
// @@protoc_insertion_point(message_clear_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      computation_proof_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      encrypted_sum_.ClearNonDefaultToEmpty();
    }
  }
  intersection_size_ = PROTOBUF_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateIntersectionSumServerMessage_ServerRoundTwo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int64 intersection_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_intersection_size(&has_bits);
          intersection_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string computation_proof = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_computation_proof();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo.computation_proof");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes encrypted_sum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_encrypted_sum();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateIntersectionSumServerMessage_ServerRoundTwo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 intersection_size = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_intersection_size(), target);
  }

  // optional string computation_proof = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_computation_proof().data(), static_cast<int>(this->_internal_computation_proof().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo.computation_proof");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_computation_proof(), target);
  }

  // optional bytes encrypted_sum = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_encrypted_sum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  return target;
}

size_t PrivateIntersectionSumServerMessage_ServerRoundTwo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string computation_proof = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_computation_proof());
    }

    // optional bytes encrypted_sum = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_encrypted_sum());
    }

    // optional int64 intersection_size = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_intersection_size());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateIntersectionSumServerMessage_ServerRoundTwo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateIntersectionSumServerMessage_ServerRoundTwo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
    MergeFrom(*source);
  }
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::MergeFrom(const PrivateIntersectionSumServerMessage_ServerRoundTwo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_computation_proof(from._internal_computation_proof());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_encrypted_sum(from._internal_encrypted_sum());
    }
    if (cached_has_bits & 0x00000004u) {
      intersection_size_ = from.intersection_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::CopyFrom(const PrivateIntersectionSumServerMessage_ServerRoundTwo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateIntersectionSumServerMessage_ServerRoundTwo::IsInitialized() const {
  return true;
}

void PrivateIntersectionSumServerMessage_ServerRoundTwo::InternalSwap(PrivateIntersectionSumServerMessage_ServerRoundTwo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  computation_proof_.Swap(&other->computation_proof_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  encrypted_sum_.Swap(&other->encrypted_sum_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(intersection_size_, other->intersection_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateIntersectionSumServerMessage_ServerRoundTwo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrivateIntersectionSumServerMessage::InitAsDefaultInstance() {
  ::private_join_and_compute::_PrivateIntersectionSumServerMessage_default_instance_.server_round_one_ = const_cast< ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne*>(
      ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne::internal_default_instance());
  ::private_join_and_compute::_PrivateIntersectionSumServerMessage_default_instance_.server_round_two_ = const_cast< ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo*>(
      ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo::internal_default_instance());
}
class PrivateIntersectionSumServerMessage::_Internal {
 public:
  static const ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne& server_round_one(const PrivateIntersectionSumServerMessage* msg);
  static const ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo& server_round_two(const PrivateIntersectionSumServerMessage* msg);
};

const ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne&
PrivateIntersectionSumServerMessage::_Internal::server_round_one(const PrivateIntersectionSumServerMessage* msg) {
  return *msg->message_content_.server_round_one_;
}
const ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo&
PrivateIntersectionSumServerMessage::_Internal::server_round_two(const PrivateIntersectionSumServerMessage* msg) {
  return *msg->message_content_.server_round_two_;
}
void PrivateIntersectionSumServerMessage::set_allocated_server_round_one(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne* server_round_one) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_content();
  if (server_round_one) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(server_round_one);
    if (message_arena != submessage_arena) {
      server_round_one = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_round_one, submessage_arena);
    }
    set_has_server_round_one();
    message_content_.server_round_one_ = server_round_one;
  }
  // @@protoc_insertion_point(field_set_allocated:private_join_and_compute.PrivateIntersectionSumServerMessage.server_round_one)
}
void PrivateIntersectionSumServerMessage::set_allocated_server_round_two(::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo* server_round_two) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message_content();
  if (server_round_two) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(server_round_two);
    if (message_arena != submessage_arena) {
      server_round_two = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, server_round_two, submessage_arena);
    }
    set_has_server_round_two();
    message_content_.server_round_two_ = server_round_two;
  }
  // @@protoc_insertion_point(field_set_allocated:private_join_and_compute.PrivateIntersectionSumServerMessage.server_round_two)
}
PrivateIntersectionSumServerMessage::PrivateIntersectionSumServerMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:private_join_and_compute.PrivateIntersectionSumServerMessage)
}
PrivateIntersectionSumServerMessage::PrivateIntersectionSumServerMessage(const PrivateIntersectionSumServerMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message_content();
  switch (from.message_content_case()) {
    case kServerRoundOne: {
      _internal_mutable_server_round_one()->::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne::MergeFrom(from._internal_server_round_one());
      break;
    }
    case kServerRoundTwo: {
      _internal_mutable_server_round_two()->::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo::MergeFrom(from._internal_server_round_two());
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:private_join_and_compute.PrivateIntersectionSumServerMessage)
}

void PrivateIntersectionSumServerMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateIntersectionSumServerMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  clear_has_message_content();
}

PrivateIntersectionSumServerMessage::~PrivateIntersectionSumServerMessage() {
  // @@protoc_insertion_point(destructor:private_join_and_compute.PrivateIntersectionSumServerMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateIntersectionSumServerMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_message_content()) {
    clear_message_content();
  }
}

void PrivateIntersectionSumServerMessage::ArenaDtor(void* object) {
  PrivateIntersectionSumServerMessage* _this = reinterpret_cast< PrivateIntersectionSumServerMessage* >(object);
  (void)_this;
}
void PrivateIntersectionSumServerMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateIntersectionSumServerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateIntersectionSumServerMessage& PrivateIntersectionSumServerMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateIntersectionSumServerMessage_private_5fjoin_5fand_5fcompute_2fprivate_5fintersection_5fsum_2eproto.base);
  return *internal_default_instance();
}


void PrivateIntersectionSumServerMessage::clear_message_content() {
// @@protoc_insertion_point(one_of_clear_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  switch (message_content_case()) {
    case kServerRoundOne: {
      if (GetArena() == nullptr) {
        delete message_content_.server_round_one_;
      }
      break;
    }
    case kServerRoundTwo: {
      if (GetArena() == nullptr) {
        delete message_content_.server_round_two_;
      }
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_CONTENT_NOT_SET;
}


void PrivateIntersectionSumServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message_content();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateIntersectionSumServerMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne server_round_one = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_server_round_one(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo server_round_two = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_server_round_two(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateIntersectionSumServerMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (message_content_case()) {
    case kServerRoundOne: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          1, _Internal::server_round_one(this), target, stream);
      break;
    }
    case kServerRoundTwo: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          2, _Internal::server_round_two(this), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:private_join_and_compute.PrivateIntersectionSumServerMessage)
  return target;
}

size_t PrivateIntersectionSumServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_content_case()) {
    // .private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundOne server_round_one = 1;
    case kServerRoundOne: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_content_.server_round_one_);
      break;
    }
    // .private_join_and_compute.PrivateIntersectionSumServerMessage.ServerRoundTwo server_round_two = 2;
    case kServerRoundTwo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_content_.server_round_two_);
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateIntersectionSumServerMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateIntersectionSumServerMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateIntersectionSumServerMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:private_join_and_compute.PrivateIntersectionSumServerMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:private_join_and_compute.PrivateIntersectionSumServerMessage)
    MergeFrom(*source);
  }
}

void PrivateIntersectionSumServerMessage::MergeFrom(const PrivateIntersectionSumServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_content_case()) {
    case kServerRoundOne: {
      _internal_mutable_server_round_one()->::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne::MergeFrom(from._internal_server_round_one());
      break;
    }
    case kServerRoundTwo: {
      _internal_mutable_server_round_two()->::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo::MergeFrom(from._internal_server_round_two());
      break;
    }
    case MESSAGE_CONTENT_NOT_SET: {
      break;
    }
  }
}

void PrivateIntersectionSumServerMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateIntersectionSumServerMessage::CopyFrom(const PrivateIntersectionSumServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:private_join_and_compute.PrivateIntersectionSumServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateIntersectionSumServerMessage::IsInitialized() const {
  return true;
}

void PrivateIntersectionSumServerMessage::InternalSwap(PrivateIntersectionSumServerMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(message_content_, other->message_content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateIntersectionSumServerMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace private_join_and_compute
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest* Arena::CreateMaybeMessage< ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_join_and_compute::PrivateIntersectionSumClientMessage_StartProtocolRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne* Arena::CreateMaybeMessage< ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_join_and_compute::PrivateIntersectionSumClientMessage_ClientRoundOne >(arena);
}
template<> PROTOBUF_NOINLINE ::private_join_and_compute::PrivateIntersectionSumClientMessage* Arena::CreateMaybeMessage< ::private_join_and_compute::PrivateIntersectionSumClientMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_join_and_compute::PrivateIntersectionSumClientMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne* Arena::CreateMaybeMessage< ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundOne >(arena);
}
template<> PROTOBUF_NOINLINE ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo* Arena::CreateMaybeMessage< ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_join_and_compute::PrivateIntersectionSumServerMessage_ServerRoundTwo >(arena);
}
template<> PROTOBUF_NOINLINE ::private_join_and_compute::PrivateIntersectionSumServerMessage* Arena::CreateMaybeMessage< ::private_join_and_compute::PrivateIntersectionSumServerMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::private_join_and_compute::PrivateIntersectionSumServerMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
